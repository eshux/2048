{"version":3,"sources":["Components/Controls/Controls.module.scss","Components/Game/Game.module.scss","Components/GameOver/GameOver.module.scss","Components/Cell/Cell.module.scss","Components/HowToPlay/HowToPlay.module.scss","Components/Score/Score.module.scss","Components/Grid/Grid.module.scss","Components/Button/Button.module.scss","Components/Cell/Cell.tsx","Components/Grid/Grid.tsx","helpers/addNumber.tsx","helpers/directions.tsx","helpers/checkGameOver.tsx","Components/Button/Button.tsx","Components/HowToPlay/HowToPlay.tsx","Components/Controls/Controls.tsx","Components/Score/Score.tsx","Components/GameOver/GameOver.tsx","Components/Game/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Cell","num","id","className","style","cell","activeCell","content","Grid","data","grid","map","row","uuidv4","addNumber","obj","addedNum","position1","Math","floor","random","length","position2","randomNumber","lodash","require","scorePoints","up","setfunction","oldGrid","cloneDeep","newGrid","forEach","item","x","y","JSON","stringify","down","right","i","left","q","Button","onClick","text","type","button","HowToPlay","useState","show","setShow","useEffect","closeHandler","e","target","window","addEventListener","removeEventListener","bg","wrapper","Controls","icon","faArrowUp","faArrowLeft","faArrowDown","faArrowRight","Score","score","GameOver","over","win","gameData","localsc","parse","localStorage","getItem","setItem","Game","setData","gameOver","setGameOver","winner","setWinner","setScore","localScore","setLocalScore","newGame","onKeyDown","event","key","every","it","push","checkRow","checkColumn","includes","splice","checker","checkWinner","local","layout","title","buttonWrapper","leftSide","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db6bece6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Controls_wrapper__1JhvB\",\"button\":\"Controls_button__15Knd\",\"row\":\"Controls_row__2XfkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Game_layout__1qfxe\",\"buttonWrapper\":\"Game_buttonWrapper__3w_dR\",\"title\":\"Game_title__i5Jxb\",\"leftSide\":\"Game_leftSide__AUznv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"GameOver_bg__CVVsa\",\"wrapper\":\"GameOver_wrapper__1usCj\",\"score\":\"GameOver_score__svqWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__1kT_P\",\"activeCell\":\"Cell_activeCell__3m_vH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"HowToPlay_bg__3qHR0\",\"wrapper\":\"HowToPlay_wrapper__LYWQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Score_wrapper__21mgP\",\"score\":\"Score_score__2ufP8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__B6Zcz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__dvV7A\"};","import React, { FC } from 'react';\r\nimport style from './Cell.module.scss';\r\n\r\ntype Props = {\r\n  num: number;\r\n};\r\n\r\nconst Cell: FC<Props> = ({ num }) => {\r\n\r\n  return (\r\n    <div id={`${num}`} className={`${style.cell} ${num !== 0 ? style.activeCell : ''}`}>\r\n      <div className={style.content}>{num}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import React, { FC } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport style from './Grid.module.scss';\r\nimport Cell from '../Cell/Cell';\r\n\r\ntype Props = {\r\n  data: number[][]\r\n};\r\n\r\nconst Grid:FC<Props> = ({ data }) => {\r\n  return (\r\n    <div className={style.grid}>\r\n      {data.map((row) => {\r\n        return (\r\n          <div key={uuidv4()}>\r\n            {row.map((cell) => {\r\n              return <Cell key={uuidv4()} num={cell} />;\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","/* eslint-disable no-param-reassign */\r\nexport const addNumber = (obj: number[][]) => {\r\n  let addedNum = false;\r\n\r\n  while (!addedNum) {\r\n    const position1 = Math.floor(Math.random() * obj.length);\r\n    const position2 = Math.floor(Math.random() * obj.length);\r\n    const randomNumber = Math.random() > 0.5 ? 2 : 4;\r\n\r\n    if (obj[position1][position2] === 0) {\r\n      obj[position1][position2] = randomNumber;\r\n      addedNum = true;\r\n    }\r\n  }\r\n};\r\n","/* eslint-disable no-param-reassign */\r\nimport { addNumber } from './addNumber';\r\n\r\nconst lodash = require('lodash');\r\n\r\nexport const scorePoints: number[] = [0];\r\n\r\nexport const up = (\r\n  obj: number[][],\r\n  setfunction: (obj: number[][]) => void\r\n) => {\r\n  const oldGrid = lodash.cloneDeep(obj);\r\n  const newGrid = lodash.cloneDeep(obj);\r\n\r\n  newGrid.forEach((item: number[]) => {\r\n    let x = 0;\r\n    let y = 1;\r\n\r\n    while (y < item.length) {\r\n      if (y === item.length) {\r\n        y = x + 1;\r\n        x += 1;\r\n      }\r\n      if (!item[x] && !item[y]) {\r\n        y += 1;\r\n      } else if (!item[x] && item[y]) {\r\n        item[x] = item[y];\r\n        item[y] = 0;\r\n        y += 1;\r\n      } else if (item[x] && !item[y]) {\r\n        y += 1;\r\n      } else if (item[x] && item[y]) {\r\n        if (item[x] === item[y]) {\r\n          item[x] += item[y];\r\n          scorePoints[0] += item[x];\r\n          item[y] = 0;\r\n          y = x + 1;\r\n          x += 1;\r\n        } else {\r\n          x += 1;\r\n          y = x + 1;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  if (JSON.stringify(oldGrid) !== JSON.stringify(newGrid)) {\r\n    addNumber(newGrid);\r\n  }\r\n\r\n  setfunction(newGrid);\r\n};\r\n\r\nexport const down = (\r\n  obj: number[][],\r\n  setfunction: (obj2: number[][]) => void\r\n) => {\r\n  const oldGrid = lodash.cloneDeep(obj);\r\n  const newGrid = lodash.cloneDeep(obj);\r\n\r\n  newGrid.forEach((item: number[]) => {\r\n    const l = item.length - 1;\r\n    let x = l;\r\n    let y = x - 1;\r\n\r\n    while (y >= 0) {\r\n      if (y === -1) {\r\n        x -= 1;\r\n        y = x - 1;\r\n      }\r\n      if (!item[x] && !item[y]) {\r\n        y -= 1;\r\n      } else if (!item[x] && item[y]) {\r\n        item[x] = item[y];\r\n        item[y] = 0;\r\n        y -= 1;\r\n      } else if (item[x] && !item[y]) {\r\n        y -= 1;\r\n      } else if (item[x] && item[y]) {\r\n        if (item[x] === item[y]) {\r\n          item[x] += item[y];\r\n          scorePoints[0] += item[x];\r\n          item[y] = 0;\r\n          x -= 1;\r\n          y = x - 1;\r\n        } else {\r\n          x -= 1;\r\n          y = x - 1;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  if (JSON.stringify(oldGrid) !== JSON.stringify(newGrid)) {\r\n    addNumber(newGrid);\r\n  }\r\n\r\n  setfunction(newGrid);\r\n};\r\n\r\nexport const right = (\r\n  obj: number[][],\r\n  setfunction: (obj2: number[][]) => void\r\n) => {\r\n  const oldGrid = lodash.cloneDeep(obj);\r\n  const newGrid = lodash.cloneDeep(obj);\r\n  let i = 0;\r\n\r\n  while (i < newGrid.length) {\r\n    let x = 0;\r\n    let y = 1;\r\n\r\n    while (y < newGrid[i].length) {\r\n      if (y === newGrid[i].length) {\r\n        y = x + 1;\r\n        x += 1;\r\n      }\r\n      if (!newGrid[x][i] && !newGrid[y][i]) {\r\n        y += 1;\r\n      } else if (!newGrid[x][i] && newGrid[y][i]) {\r\n        newGrid[x][i] = newGrid[y][i];\r\n        newGrid[y][i] = 0;\r\n        y += 1;\r\n      } else if (newGrid[x][i] && !newGrid[y][i]) {\r\n        y += 1;\r\n      } else if (newGrid[x][i] && newGrid[y][i]) {\r\n        if (newGrid[x][i] === newGrid[y][i]) {\r\n          newGrid[x][i] += newGrid[y][i];\r\n          scorePoints[0] += newGrid[x][i];\r\n          newGrid[y][i] = 0;\r\n          y = x + 1;\r\n          x += 1;\r\n        } else {\r\n          x += 1;\r\n          y = x + 1;\r\n        }\r\n      }\r\n    }\r\n    i += 1;\r\n  }\r\n\r\n  if (JSON.stringify(oldGrid) !== JSON.stringify(newGrid)) {\r\n    addNumber(newGrid);\r\n  }\r\n\r\n  setfunction(newGrid);\r\n};\r\n\r\nexport const left = (\r\n  obj: number[][],\r\n  setfunction: (obj2: number[][]) => void\r\n) => {\r\n  const oldGrid = lodash.cloneDeep(obj);\r\n  const newGrid = lodash.cloneDeep(obj);\r\n  let i = 0;\r\n\r\n  while (i < newGrid.length) {\r\n    const l = newGrid[i].length - 1;\r\n    let x = l;\r\n    let y = x - 1;\r\n\r\n    while (y >= 0) {\r\n      if (y === -1) {\r\n        x -= 1;\r\n        y = x - 1;\r\n      }\r\n      if (!newGrid[x][i] && !newGrid[y][i]) {\r\n        y -= 1;\r\n      } else if (!newGrid[x][i] && newGrid[y][i]) {\r\n        newGrid[x][i] = newGrid[y][i];\r\n        newGrid[y][i] = 0;\r\n        y -= 1;\r\n      } else if (newGrid[x][i] && !newGrid[y][i]) {\r\n        y -= 1;\r\n      } else if (newGrid[x][i] && newGrid[y][i]) {\r\n        if (newGrid[x][i] === newGrid[y][i]) {\r\n          newGrid[x][i] += newGrid[y][i];\r\n          scorePoints[0] += newGrid[x][i];\r\n          newGrid[y][i] = 0;\r\n          x -= 1;\r\n          y = x - 1;\r\n        } else {\r\n          x -= 1;\r\n          y = x - 1;\r\n        }\r\n      }\r\n    }\r\n    i += 1;\r\n  }\r\n\r\n  if (JSON.stringify(oldGrid) !== JSON.stringify(newGrid)) {\r\n    addNumber(newGrid);\r\n  } \r\n\r\n  setfunction(newGrid);\r\n};\r\n\r\nexport const resetScore = () => {\r\n  scorePoints[0] = 0;\r\n};","const q: string[] = [];\r\n\r\nexport const checkRow = (\r\n  obj: number[][]\r\n) => {\r\n  let i = 0;\r\n  while (i < obj.length) {\r\n    let x = 0;\r\n    let y = 1;\r\n\r\n    while (y < obj[i].length) {\r\n      if (obj[i][x] !== obj[i][y]) {\r\n        y += 1;\r\n        x += 1;\r\n      } else if (obj[i][x] === obj[i][y]) {\r\n        q.push('x');\r\n        return;\r\n      }\r\n    }\r\n    i += 1;\r\n  }\r\n};\r\n\r\nexport const checkColumn = (obj: number[][]) => {\r\n  let i = 0;\r\n  while (i < obj.length) {\r\n    let x = 0;\r\n    let y = 1;\r\n\r\n    while (y < obj[i].length) {\r\n      if (obj[x][i] !== obj[y][i]) {\r\n        y += 1;\r\n        x += 1;\r\n      } else if (obj[x][i] === obj[y][i]) {\r\n        q.push('x');\r\n        return;\r\n      }\r\n    }\r\n\r\n    i += 1;\r\n  }\r\n};\r\n\r\nexport const checker = (setGameOver: (x: boolean) => void) => {\r\n  if (q.includes('x')) {\r\n    q.splice(0, q.length);\r\n  } else {\r\n    setGameOver(true);\r\n  }\r\n};\r\n","import React, { FC } from 'react';\r\nimport style from './Button.module.scss';\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n  text: string;\r\n};\r\n\r\nconst Button: FC<Props> = ({ onClick, text }) => {\r\n  return (\r\n    <button type=\"button\" className={style.button} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect, useState } from 'react';\r\nimport style from './HowToPlay.module.scss';\r\nimport Button from '../Button/Button';\r\n\r\nconst HowToPlay = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    const closeHandler = (e) => e.target.id && setShow(false);\r\n    window.addEventListener('mousedown', closeHandler);\r\n    return () => {\r\n      window.removeEventListener('mousedown', closeHandler);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button text=\"How To Play\" onClick={() => setShow(true)} />\r\n      {show && (\r\n        <div id=\"bg\" className={style.bg}>\r\n          <div className={style.wrapper}>\r\n            <h1>How to Play</h1>\r\n            <p>\r\n              Use your arrow keys or buttons on the right side to move the\r\n              tiles. Tiles with the same number merge into one when they touch.\r\n              Add them up to reach <strong>2048</strong>!\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","import React, { FC } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faArrowUp,\r\n  faArrowDown,\r\n  faArrowRight,\r\n  faArrowLeft,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport style from './Controls.module.scss';\r\n\r\ntype Props = {\r\n  up: () => void;\r\n  down: () => void;\r\n  left: () => void;\r\n  right: () => void;\r\n};\r\n\r\nconst Controls: FC<Props> = ({ up, down, left, right }) => {\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <button type=\"button\" className={style.button} onClick={up}>\r\n        <FontAwesomeIcon icon={faArrowUp} />\r\n      </button>\r\n      <div className={style.row}>\r\n        <button type=\"button\" className={style.button} onClick={right}>\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n        </button>\r\n        <button type=\"button\" className={style.button} onClick={down}>\r\n          <FontAwesomeIcon icon={faArrowDown} />\r\n        </button>\r\n        <button type=\"button\" className={style.button} onClick={left}>\r\n          <FontAwesomeIcon icon={faArrowRight} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React, { FC } from 'react';\r\nimport style from './Score.module.scss';\r\n\r\ntype Props = {\r\n  num: number;\r\n  text: string;\r\n};\r\n\r\nconst Score: FC<Props> = ({ num, text }) => {\r\n  return (\r\n    <div className={style.wrapper}>\r\n      {text} <span className={style.score}>{num}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import React, { FC } from 'react';\r\nimport style from './GameOver.module.scss';\r\n\r\ntype Props = {\r\n  over: boolean;\r\n  win: boolean;\r\n  score: number;\r\n};\r\n\r\nconst GameOver: FC<Props> = ({ over, score, win }) => {\r\n  return (\r\n    <>\r\n      {(over || win) && (\r\n        <div id=\"bg\" className={style.bg}>\r\n          {over ? (\r\n            <div className={style.wrapper}>\r\n              <h1>Game Over</h1>\r\n              <h2>\r\n                Your score: <span className={style.score}>{score}</span>\r\n              </h2>\r\n            </div>\r\n          ) : (\r\n            <div className={style.wrapper}>\r\n              <h1>Congratulations!</h1>\r\n              <h2>\r\n                Your score: <span className={style.score}>{score}</span>\r\n              </h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport style from './Game.module.scss';\r\nimport Grid from '../Grid/Grid';\r\nimport {\r\n  up,\r\n  down,\r\n  right,\r\n  left,\r\n  scorePoints,\r\n  resetScore,\r\n} from '../../helpers/directions';\r\nimport { addNumber } from '../../helpers/addNumber';\r\nimport { checkRow, checkColumn, checker } from '../../helpers/checkGameOver';\r\nimport Button from '../Button/Button';\r\nimport HowToPlay from '../HowToPlay/HowToPlay';\r\nimport Controls from '../Controls/Controls';\r\nimport Score from '../Score/Score';\r\nimport GameOver from '../GameOver/GameOver';\r\n\r\nconst lodash = require('lodash');\r\n\r\nconst gameData = [\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n];\r\n\r\n// @ts-ignore\r\nconst localsc = JSON.parse(localStorage.getItem('2048Score'));\r\nif (!localsc) {\r\n  localStorage.setItem('2048Score', `${0}`);\r\n}\r\n\r\nconst Game = () => {\r\n  const [data, setData] = useState(gameData);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [winner, setWinner] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [localScore, setLocalScore] = useState(localsc);\r\n\r\n  useEffect(() => {\r\n    newGame();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setScore(scorePoints[0]);\r\n  }, [data]);\r\n\r\n  // Setting keyboard arrows\r\n  useEffect(() => {\r\n    const onKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'ArrowRight') {\r\n        left(data, setData);\r\n      } else if (event.key === 'ArrowLeft') {\r\n        right(data, setData);\r\n      } else if (event.key === 'ArrowDown') {\r\n        down(data, setData);\r\n      } else if (event.key === 'ArrowUp') {\r\n        up(data, setData);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', onKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', onKeyDown);\r\n    };\r\n  });\r\n\r\n  // Check and set gameOver\r\n  useEffect(() => {\r\n    const fullRows = data.map((item: number[]) => item.every((it) => it));\r\n    const fullGrid = fullRows.every((item: boolean) => item);\r\n\r\n    if (fullGrid) {\r\n      checkRow(data);\r\n      checkColumn(data);\r\n      checker(setGameOver);\r\n    }\r\n    checkWinner();\r\n  }, [data]);\r\n\r\n  const checkWinner = () => {\r\n    data.forEach((item: number[]) => {\r\n      item.forEach((it) => {\r\n        if (it === 2048) {\r\n          setWinner(true);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  // Set score in local storage\r\n  useEffect(() => {\r\n    if (gameOver) {\r\n      const local = JSON.parse(localStorage.getItem('2048Score')!);\r\n      if (local < scorePoints[0]) {\r\n        localStorage.setItem('2048Score', `${scorePoints[0]}`);\r\n      }\r\n    }\r\n  }, [gameOver]);\r\n\r\n  const newGame = () => {\r\n    const newGrid = lodash.cloneDeep(gameData);\r\n    addNumber(newGrid);\r\n    addNumber(newGrid);\r\n    setData(newGrid);\r\n    setGameOver(false);\r\n    setWinner(false);\r\n    resetScore();\r\n    const local = JSON.parse(localStorage.getItem('2048Score')!);\r\n    local > scorePoints[0]\r\n      ? setLocalScore(local)\r\n      : setLocalScore(scorePoints[0]);\r\n  };\r\n\r\n  return (\r\n    <div className={style.layout}>\r\n      <div className={style.title}>2048</div>\r\n      <div className={style.buttonWrapper}>\r\n        <GameOver over={gameOver} win={winner} score={score} />\r\n        <Button text=\"New Game\" onClick={newGame} />\r\n        <HowToPlay />\r\n      </div>\r\n      <Grid data={data} />\r\n      <div className={style.leftSide}>\r\n        <div className={style.score}>\r\n          <Score text=\"Best\" num={score > localScore ? score : localScore} />\r\n          <Score text=\"Score\" num={score} />\r\n        </div>\r\n        <Controls\r\n          up={() => up(data, setData)}\r\n          down={() => down(data, setData)}\r\n          left={() => left(data, setData)}\r\n          right={() => right(data, setData)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport './App.scss';\nimport 'flexboxgrid';\nimport Game from './Components/Game/Game';\n\nconst App = () => {\n\n  return (\n    <section className=\"game\">\n      <div className=\"container container-fluid\">\n        <div className=\"row center-xs\">\n          <div className=\"col-xs-12\">\n            <Game />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}